AWSTemplateFormatVersion: "2010-09-09"
Description: Lean Single Region Multi-AZ Architecture with EC2 and RDS.

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1Cidr:
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1Cidr:
    Type: String
    Default: 10.0.3.0/24
  PrivateSubnet2Cidr:
    Type: String
    Default: 10.0.4.0/24
  Ec2InstanceConnectCidr:
    Type: String
    Default: 18.206.107.24/29
  Ec2ImageId:
    Type: String
    Description: AMI ID for EC2 instance
    Default: ami-08b5b3a93ed654d19 # Replace with your desired AMI
  Ec2InstanceType:
    Type: String
    Default: t2.micro
  DbInstanceIdentifier:
    Type: String
    Default: MyRDSInstance
  DbInstanceClass:
    Type: String
    Default: db.t3.micro
  DbEngine:
    Type: String
    Default: postgres
  DbMasterUsername:
    Type: String
    Default: rdsuser
  DbMasterPassword:
    Type: String
    NoEcho: true
  MyIpAddressCidr:
    Type: String
    Description: Your public IP address in CIDR notation.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select [ 0, !GetAZs "" ]

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select [ 1, !GetAZs "" ]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, and EC2 Instance Connect access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIpAddressCidr
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref Ec2InstanceConnectCidr

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref Ec2ImageId
      InstanceType: !Ref Ec2InstanceType
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref Ec2SecurityGroup

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for RDS
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow RDS access from EC2
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref Ec2SecurityGroup

  DbInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DbInstanceIdentifier
      DBInstanceClass: !Ref DbInstanceClass
      Engine: !Ref DbEngine
      MasterUsername: !Ref DbMasterUsername
      MasterUserPassword: !Ref DbMasterPassword
      DBSubnetGroupName: !Ref DbSubnetGroup
      MultiAZ: true
      AllocatedStorage: 20
      VPCSecurityGroups:
        - !Ref DbSecurityGroup

Outputs:
  VpcId:
    Value: !Ref VPC
  PublicSubnet1Id:
    Value: !Ref PublicSubnet1
  PrivateSubnet1Id:
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Value: !Ref PrivateSubnet2
  Ec2InstanceId:
    Value: !Ref Ec2Instance
  DbEndpointAddress:
    Value: !GetAtt DbInstance.Endpoint.Addr
  DbEndpointPort:    
    Value: !GetAtt DbInstance.Endpoint.Port
